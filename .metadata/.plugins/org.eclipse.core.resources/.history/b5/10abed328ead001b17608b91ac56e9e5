package Order;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;
import java.text.SimpleDateFormat;

import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;

public class MainOrder {
	private static String curentDir;
	private static JFrame enterFrame;
	private static JFrame frame;
	private static BufferedWriter bwNameOrder;
	private static BufferedWriter bwNumberOrder = null;
	private static BufferedWriter bwDateOrder = null;
	public static void main(String[] args) throws IOException {
		curentDir = System.getProperty("user.dir");
		enterData();
		listData();
		mainFrame();
	}
	public static void mainFrame() {
		JFrame frame = new JFrame();
		JPanel panel = new JPanel();
		panel.setLayout(new GridLayout(3, 1));
		panel.setBorder(new EmptyBorder(new Insets(150, 200, 150, 200)));
		JButton enterOrderButton = new JButton("Nhập đơn hàng");
		JButton listOrderButton = new JButton("Danh sách đơn hàng");
		JButton optionButton = new JButton("Cài đặt");
		panel.add(enterOrderButton);
		panel.add(listOrderButton);
		panel.add(optionButton);
		frame.add(panel, BorderLayout.CENTER);
		frame.setPreferredSize(new Dimension(600, 600));
		frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		enterOrderButton.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				enterFrame.setVisible(true);
			}
		});
		frame.pack();
		frame.setVisible(true);
	}
	public static void enterData() throws IOException {
		enterFrame = new JFrame();
		JPanel enterJPanel = new JPanel();
		enterJPanel.setBorder(new EmptyBorder(new Insets(150, 200, 150, 200)));
		JLabel enterLabel = new JLabel("Tên sản phẩm");
		JTextField enterText = new JTextField(50);
		JLabel numberOrderLabel = new JLabel("Số lượng");
		JTextField numberOrderText = new JTextField(8);
		JButton enterButton = new JButton("Nhập");
		enterJPanel.add(enterLabel);
		enterJPanel.add(enterText);
		enterJPanel.add(numberOrderLabel);
		enterJPanel.add(numberOrderText);
		enterJPanel.add(enterButton);
		enterFrame.add(enterJPanel);
		FileWriter fwNameOrder = null;
		FileWriter fwNumberOrder = null;
		FileWriter fwDateOrder = null;
		try {
			File fileNameOrder = new File(curentDir + "/NameOrder.txt");
			File fileNumberOrder = new File(curentDir + "/NumberOrder.txt");
			File fileDateOrder = new File(curentDir + "/DateOrder.txt");
			fwNameOrder = new FileWriter(fileNameOrder.getAbsoluteFile(), true);
			fwNumberOrder = new FileWriter(fileNumberOrder.getAbsoluteFile(), true);
			fwDateOrder = new FileWriter(fileDateOrder.getAbsoluteFile(), true);
			bwNameOrder = new BufferedWriter(fwNameOrder);
			bwNumberOrder = new BufferedWriter(fwNumberOrder);
			bwDateOrder = new BufferedWriter(fwDateOrder);	
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		enterButton.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				String nameTxt = enterText.getText() +" \n";
				String numberTxt = numberOrderText.getText() + " \n";
				SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
				String DateTxt = formatter.format(java.time.LocalDate.now());
				try {
					if(!nameTxt.equals(" \n")) {
					bwNameOrder.write(nameTxt);
					bwNumberOrder.write(numberTxt);
					bwDateOrder.write(DateTxt);
					}
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
		enterFrame.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent windowEvent) {
				if(bwNameOrder!= null) {
					try {
						bwNameOrder.close();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				if(bwNumberOrder != null) {
					try {
						bwNumberOrder.close();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
			}
		});
		enterFrame.setPreferredSize(new Dimension(1650, 1080));
		enterFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		enterFrame.pack();
	}
	
	public static void listData() {
		JFrame listFrame = new JFrame();
		JPanel listJPanel = new JPanel();
		listJPanel.setLayout(new BoxLayout(listJPanel, BoxLayout.X_AXIS));
		listJPanel.setBorder(new EmptyBorder(new Insets(150, 200, 150, 200)));
		listFrame.add(listJPanel);
		listFrame.setPreferredSize(new Dimension(600, 600));
		listFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
	}
}
